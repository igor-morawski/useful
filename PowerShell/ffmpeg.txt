# concatenate all videos in the current directory

Get-ChildItem  *.avi | ForEach {"file '" + $_.Name + "'" >> "mylist.txt"}; ffmpeg -f concat -i mylist.txt -c copy output.avi; Remove

New-Item -ItemType file mylist.txt;
$list = Get-ChildItem mylist.txt;
Get-ChildItem  *.avi | ForEach {$a = "file '" + $_.Name + "'"; Add-Content $list $a};
ffmpeg -f concat -i mylist.txt -c copy output.avi
Remove-Item $list


#merge videos by stacking horizontally
# https://unix.stackexchange.com/questions/233832/merge-two-video-clips-into-one-placing-them-next-to-each-other

ffmpeg -i input1.mp4 -i input2.mp4 -filter_complex '[0:v]pad=iw*2:ih[int];[int][1:v]overlay=W/2:0[vid]' -map [vid] -c:v libx264 -crf 23 -preset veryfast output.mp4

#convert MTS to MP4 without reencoding
ffmpeg -i input.m2ts -c:v copy -c:a aac -strict experimental -b:a 128k MTS.mp4

#convert GIF to MP4 with scaling by 100 and without interpolation!!! (nn-interpolation) 
ffmpeg -i input.gif -movflags faststart -pix_fmt yuv420p -vf "scale=100*trunc(iw/2)*2:100*trunc(ih/2)*2:flags=neighbor" FIR.mp4

#do two of the above for all files in a dir. recursively!!!
$extension = "MTS"
$new_extension = "mp4"
Get-ChildItem *.$extension -recurse | ForEach {$fn = [io.path]::GetFileNameWithoutExtension($_.FullName); $input_fp = $_.FullName; $output_fp = (join-path $_.DirectoryName $fn"."$new_extension); ffmpeg -i $input_fp -c:v copy -c:a aac -strict experimental -b:a 128k $output_fp}

$extension = "gif"
$new_extension = "mp4"
Get-ChildItem *.$extension -recurse | ForEach {$fn = [io.path]::GetFileNameWithoutExtension($_.FullName); $input_fp = $_.FullName; $output_fp = (join-path $_.DirectoryName $fn"."$new_extension); ffmpeg -i $input_fp -movflags faststart -pix_fmt yuv420p -vf "scale=100*trunc(iw/2)*2:100*trunc(ih/2)*2:flags=neighbor" $output_fp}

#cut one video to many videos according to timestamps and the associated output file name
#add -c copy if you need speed (but some frames will be messed up), otherwise the command is as follows
$input = "input.mp4"
$timestamps = (("0:54", "1:12", "output1.mp4"), ("1:12", "1:17", "output2.mp4"))
Foreach ($tuple in $timestamps) {
	$start, $end, $fn = $tuple
	$cmd = "ffmpeg -t {2} -i {0} -ss {1} {3}" -f $input, $start, $end, $fn
	$cmd
	Invoke-Expression -Command $cmd
}



